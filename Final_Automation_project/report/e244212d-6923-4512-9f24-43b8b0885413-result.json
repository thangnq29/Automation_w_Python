{"name": "test_checkout_process", "status": "failed", "statusDetails": {"message": "AssertionError: \n  Expected:\n  Thank , you for your order! Your order has been dispatched, and will arrive just as fast as the pony can get there!\n  \n  Actual:\n  Thank you for your order! Your order has been dispatched, and will arrive just as fast as the pony can get there!\nassert 'Thank , you ...an get there!' == 'Thank you fo...an get there!'\n  \n  \u001b[0m\u001b[91m- Thank you for your order! Your order has been dispatched, and will arrive just as fast as the pony can get there!\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n  \u001b[92m+ Thank , you for your order! Your order has been dispatched, and will arrive just as fast as the pony can get there!\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n  ?       ++\u001b[90m\u001b[39;49;00m", "trace": "self = <tests.test_02_checkout.TestCheckout object at 0x000001C89372F250>\n\n    def test_checkout_process(self):\n        login = LoginPage(self.driver)\n        inventory = InventoryPage(self.driver)\n        cart = CartPage(self.driver)\n        checkout = CheckoutPage(self.driver)\n    \n        login.do_login(ConfigReader.get_username(), ConfigReader.get_password())\n    \n        with allure.step(\"Add 3 products to cart\"):\n            inventory.add_n_products_to_cart(3)\n    \n        with allure.step(\"Click the shopping cart icon\"):\n            inventory.click_shopping_cart_icon()\n    \n        with allure.step(\"Click on Checkout button\"):\n            cart.click_checkout()\n    \n        with allure.step(\"Enter checkout information\"):\n            checkout.enter_checkout_info(\n                ConfigReader.get_firstname(),\n                ConfigReader.get_lastname(),\n                ConfigReader.get_postal_code()\n            )\n    \n        with allure.step(\"Click Continue to proceed with checkout\"):\n            checkout.click_continue()\n    \n        with allure.step(\"Click Finish to place the order\"):\n            checkout.click_finish_btn()\n    \n        with allure.step(\"Verify full confirmation message after successful checkout\"):\n>           assert ConfigReader.get_expected_message() == checkout.get_confirmation_message().strip(), f\"\\nExpected:\\n{ConfigReader.get_expected_message()}\\n\\nActual:\\n{checkout.get_confirmation_message()}\"\nE           AssertionError: \nE             Expected:\nE             Thank , you for your order! Your order has been dispatched, and will arrive just as fast as the pony can get there!\nE             \nE             Actual:\nE             Thank you for your order! Your order has been dispatched, and will arrive just as fast as the pony can get there!\nE           assert 'Thank , you ...an get there!' == 'Thank you fo...an get there!'\nE             \nE             \u001b[0m\u001b[91m- Thank you for your order! Your order has been dispatched, and will arrive just as fast as the pony can get there!\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\nE             \u001b[92m+ Thank , you for your order! Your order has been dispatched, and will arrive just as fast as the pony can get there!\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\nE             ?       ++\u001b[90m\u001b[39;49;00m\n\ntests\\test_02_checkout.py:46: AssertionError"}, "steps": [{"name": "Add 3 products to cart", "status": "passed", "start": 1753611623192, "stop": 1753611623369}, {"name": "Click the shopping cart icon", "status": "passed", "start": 1753611623369, "stop": 1753611623438}, {"name": "Click on Checkout button", "status": "passed", "start": 1753611623439, "stop": 1753611623503}, {"name": "Enter checkout information", "status": "passed", "start": 1753611623503, "stop": 1753611623899}, {"name": "Click Continue to proceed with checkout", "status": "passed", "start": 1753611623899, "stop": 1753611623970}, {"name": "Click Finish to place the order", "status": "passed", "start": 1753611623970, "stop": 1753611624028}, {"name": "Verify full confirmation message after successful checkout", "status": "failed", "statusDetails": {"message": "AssertionError: \n  Expected:\n  Thank , you for your order! Your order has been dispatched, and will arrive just as fast as the pony can get there!\n  \n  Actual:\n  Thank you for your order! Your order has been dispatched, and will arrive just as fast as the pony can get there!\nassert 'Thank , you ...an get there!' == 'Thank you fo...an get there!'\n  \n  \u001b[0m\u001b[91m- Thank you for your order! Your order has been dispatched, and will arrive just as fast as the pony can get there!\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n  \u001b[92m+ Thank , you for your order! Your order has been dispatched, and will arrive just as fast as the pony can get there!\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n  ?       ++\u001b[90m\u001b[39;49;00m\n", "trace": "  File \"D:\\Automation_w_Python\\Final_Automation_Project\\tests\\test_02_checkout.py\", line 46, in test_checkout_process\n    assert ConfigReader.get_expected_message() == checkout.get_confirmation_message().strip(), f\"\\nExpected:\\n{ConfigReader.get_expected_message()}\\n\\nActual:\\n{checkout.get_confirmation_message()}\"\n"}, "start": 1753611624028, "stop": 1753611624100}], "attachments": [{"name": "Screenshot on Failure", "source": "bd384ee3-1564-4f08-972f-b3e381d825d5-attachment.png", "type": "image/png"}], "start": 1753611622707, "stop": 1753611624101, "uuid": "429c1534-6fe0-4098-8802-c592bbd01be1", "historyId": "d4a70038ec4827dd0d4a1dc41ca25b02", "testCaseId": "d4a70038ec4827dd0d4a1dc41ca25b02", "fullName": "tests.test_02_checkout.TestCheckout#test_checkout_process", "labels": [{"name": "story", "value": "Successful Checkout with 3 Items"}, {"name": "feature", "value": "Checkout Process"}, {"name": "severity", "value": "critical"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_02_checkout"}, {"name": "subSuite", "value": "TestCheckout"}, {"name": "host", "value": "HPVictus_16"}, {"name": "thread", "value": "8816-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_02_checkout"}], "titlePath": ["tests", "test_02_checkout.py", "TestCheckout"]}